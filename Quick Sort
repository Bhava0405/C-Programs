/*
  Quick sort algorithm in C
  By: Bhava0405
  
  Output:
  Enter total number of elements: 7
  Enter the 7 elements: 65 47 13 81 19 40 45
  Sorted Array: 13 19 40 45 47 65 81
  
*/

#include<stdio.h>
void swap(int *p1,int *p2)
{
    int temp;
    temp=*p1;
    *p1=*p2;
    *p2=temp;
}
int partition(int a[],int startt,int endd)
{
    int p,i;
    int pivot=a[endd];
    p=startt-1;
    for(i=startt;i<endd;i++)
    {
        if(a[i]<pivot)
        {
            swap(&a[i],&a[++p]);
        }
    }
    swap(&a[++p],&a[endd]);
    return p;
}
void quickSort(int arr[],int start,int end)
{
    if(start<end)
    {
        int pi;
        pi=partition(arr,start,end);
        quickSort(arr,start,pi-1);
        quickSort(arr,pi+1,end);
    }
}
void main()
{
    int iarr[30];
    int size,a,k;
    printf("Enter the number of elements : ");
    scanf("%d",&size);
    printf("Enter the %d elements : ",size);
    for(a=0;a<size;a++)
    {
        scanf("%d",&iarr[a]);
    }
    quickSort(iarr,0,size-1);
    printf("Sorted Array : ");
    for(k=0;k<size;k++)
    {
        printf(" %d ",iarr[k]);
    }    
}
